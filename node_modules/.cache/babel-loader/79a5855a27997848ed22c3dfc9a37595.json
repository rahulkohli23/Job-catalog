{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/Desktop/Projects/job-catalog/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport data from \"../src/API/data.json\";\nimport JobBoardComponent from \"../src/components/JobBoardComponent\";\n\nconst App = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    return setJobs(data);\n  }, []);\n\n  const filterByTags = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs.filter(filterByTags);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = fil => {\n    setFilters(filters.filter(f => f !== fil));\n  };\n\n  const clearFilters = () => {\n    setFilters([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-teal-500 mb-12\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/bg-header-desktop.svg\",\n        alt: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-auto\",\n      children: [filters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-white shadow-md -my-16 mb-16 mx-10 p-6 rounded z-10 relative\",\n        children: [filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleFilterClick(filter),\n          className: \"font-bold mr-4 mb-4 p-2 rounded cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-teal-500 bg-teal-100 p-2\",\n            children: filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-teal-500 text-teal-100 p-2 \",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, filter, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          className: \"font-bold text-gray-700 ml-auto\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Jobs are fetching...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : filteredJobs.map(job => {\n        return /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n          handleTagClick: handleTagClick,\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"T1bJ6+v8uLWs7HpQF8UGJcCOzGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rahul/Desktop/Projects/job-catalog/src/App.js"],"names":["React","useState","useEffect","data","JobBoardComponent","App","jobs","setJobs","filters","setFilters","filterByTags","role","level","tools","languages","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","handleFilterClick","fil","f","clearFilters","map","job","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport data from \"../src/API/data.json\"\nimport JobBoardComponent from \"../src/components/JobBoardComponent\";\n\nconst App = () => {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    return setJobs(data);\n  }, [])\n\n  const filterByTags = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n    if (languages) {\n      tags.push(...languages)\n    }\n\n    return tags.some(tag => filters.includes(tag))\n  }\n  const filteredJobs = jobs.filter(filterByTags)\n\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  }\n\n  const handleFilterClick = (fil) => {\n    setFilters(filters.filter(f => f !== fil));\n  }\n\n  const clearFilters = () => {\n    setFilters([])\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"bg-teal-500 mb-12\">\n        <img src=\"/images/bg-header-desktop.svg\" alt=\"header\" />\n      </header>\n      <div className=\"container m-auto\">\n        {\n          filters.length > 0 &&\n          (<div className=\"flex bg-white shadow-md -my-16 mb-16 mx-10 p-6 rounded z-10 relative\">\n            {filters.map((filter) =>\n              <span onClick={() => handleFilterClick(filter)} key={filter} className=\"font-bold mr-4 mb-4 p-2 rounded cursor-pointer\">\n                <span className=\"text-teal-500 bg-teal-100 p-2\">\n                  {filter}\n                </span>\n                <span className=\"bg-teal-500 text-teal-100 p-2 \">X</span>\n              </span>)}\n            <button onClick={clearFilters} className=\"font-bold text-gray-700 ml-auto\">Clear</button>\n          </div>)\n        }\n        {\n          jobs.length === 0 ? (\n            <p>Jobs are fetching...</p>\n          ) : (\n              filteredJobs.map(job => {\n                return <JobBoardComponent handleTagClick={handleTagClick} job={job} key={job.id} />\n              })\n            )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}