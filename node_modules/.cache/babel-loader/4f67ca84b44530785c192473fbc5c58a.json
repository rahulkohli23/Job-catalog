{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/Desktop/Projects/job-catalog/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport data from \"../src/API/data.json\";\nimport JobBoardComponent from \"../src/components/JobBoardComponent\";\n\nconst App = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    return setJobs(data);\n  }, []);\n\n  const filterByTags = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs.filter(filterByTags);\n\n  const handleTagClick = tag => {\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = fil => {\n    setFilters(filters.filter(f => f !== fil));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-teal-500 mb-12\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/bg-header-desktop.svg\",\n        alt: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: filters.length > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(tag),\n        className: \"text-teal-500 bg-teal-100 font-bold mr-4 mb-4 p-2 rounded sm:mb-0 cursor-pointer\",\n        children: filter\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jobs are fetching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : filteredJobs.map(job => {\n      return /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n        handleTagClick: handleTagClick,\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zWzFHo9UEeh4zFWXLGk9bcHV1Y8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rahul/Desktop/Projects/job-catalog/src/App.js"],"names":["React","useState","useEffect","data","JobBoardComponent","App","jobs","setJobs","filters","setFilters","filterByTags","role","level","tools","languages","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","handleFilterClick","fil","f","map","job","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOK,OAAO,CAACJ,IAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,YAAY,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAAD,KAAqC;AACxD,QAAGN,OAAO,CAACO,MAAR,KAAiB,CAApB,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GAAG,CAACL,IAAD,EAAOC,KAAP,CAAb;;AAEA,QAAGC,KAAH,EAAU;AACRG,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGJ,KAAb;AACD;;AACD,QAAGC,SAAH,EAAc;AACZE,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGH,SAAb;AACD;;AAED,WAAOE,IAAI,CAACE,IAAL,CAAUC,GAAG,IAAIX,OAAO,CAACY,QAAR,CAAiBD,GAAjB,CAAjB,CAAP;AACD,GAfD;;AAgBA,QAAME,YAAY,GAAGf,IAAI,CAACgB,MAAL,CAAYZ,YAAZ,CAArB;;AAEA,QAAMa,cAAc,GAAIJ,GAAD,IAAS;AAC9BV,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaW,GAAb,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMK,iBAAiB,GAAIC,GAAD,IAAS;AACjChB,IAAAA,UAAU,CAACD,OAAO,CAACc,MAAR,CAAeI,CAAC,IAAIA,CAAC,KAAKD,GAA1B,CAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,+BAAT;AAAyC,QAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,gBAEIjB,OAAO,CAACO,MAAR,GAAiB,CAAjB,IAAsBP,OAAO,CAACmB,GAAR,CAAYL,MAAM,iBAAI;AAAM,QAAA,OAAO,EAAE,MAAME,iBAAiB,CAACL,GAAD,CAAtC;AAAuD,QAAA,SAAS,EAAC,kFAAjE;AAAA,kBAAqJG;AAArJ,SAAkDH,GAAlD;AAAA;AAAA;AAAA;AAAA,cAAtB;AAF1B;AAAA;AAAA;AAAA;AAAA,YAJF,EAUIb,IAAI,CAACS,MAAL,KAAgB,CAAhB,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGEM,YAAY,CAACM,GAAb,CAAiBC,GAAG,IAAI;AACtB,0BAAO,QAAC,iBAAD;AAAmB,QAAA,cAAc,EAAEL,cAAnC;AAAmD,QAAA,GAAG,EAAEK;AAAxD,SAAkEA,GAAG,CAACC,EAAtE;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CAbN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvDD;;GAAMxB,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import React , { useState, useEffect }from 'react';\nimport data from \"../src/API/data.json\"\nimport JobBoardComponent from \"../src/components/JobBoardComponent\";\n\nconst App = () => {\n  const [ jobs, setJobs ] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    return setJobs(data);\n  }, [])\n\n  const filterByTags = ({role, level, tools, languages}) => {\n    if(filters.length===0){\n      return true;\n    }\n    \n    const tags = [role, level];\n\n    if(tools) {\n      tags.push(...tools);\n    }\n    if(languages) {\n      tags.push(...languages)\n    }\n\n    return tags.some(tag => filters.includes(tag))\n  }\n  const filteredJobs = jobs.filter(filterByTags)\n  \n  const handleTagClick = (tag) => {\n    setFilters([...filters, tag]);\n  }\n\n  const handleFilterClick = (fil) => {\n    setFilters(filters.filter(f => f !== fil));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"bg-teal-500 mb-12\">\n        <img src=\"/images/bg-header-desktop.svg\" alt=\"header\"/>\n      </header>\n      <div className=\"flex flex-col bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {\n          filters.length > 0 && filters.map(filter => <span onClick={() => handleFilterClick(tag)} key={tag} className=\"text-teal-500 bg-teal-100 font-bold mr-4 mb-4 p-2 rounded sm:mb-0 cursor-pointer\">{filter}</span>)\n        }\n      </div>\n      {\n        jobs.length === 0 ? (\n          <p>Jobs are fetching...</p>\n        ) : (\n          filteredJobs.map(job => {\n            return <JobBoardComponent handleTagClick={handleTagClick} job={job} key={job.id}/>\n          })\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}